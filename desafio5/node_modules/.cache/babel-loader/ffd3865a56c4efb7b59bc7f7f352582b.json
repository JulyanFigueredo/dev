{"ast":null,"code":"import _slicedToArray from \"/home/julyan/Documents/dev/dev/desafio5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/julyan/Documents/dev/dev/desafio5/src/pages/Repository/index.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport api from '../../services/api';\nimport Container from '../../components/Container';\nimport { Loading, Owner, IssueList } from './styles';\nexport default class Repository extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      repository: {},\n      issues: [],\n      loading: true,\n      filters: [{\n        state: 'all',\n        label: 'Todas',\n        active: true\n      }, {\n        state: 'open',\n        label: 'Abertas',\n        active: false\n      }, {\n        state: 'closed',\n        label: 'Fechadas',\n        active: false\n      }],\n      filterIndex: 0,\n      page: 1\n    };\n  }\n\n  async componentDidMount() {\n    const match = this.props.match;\n    const filters = this.state.filters;\n    const repoName = decodeURIComponent(match.params.repository);\n\n    const _ref = await Promise.all([api.get(`/repos/${repoName}`), api.get(`/repos/${repoName}/issues`, {\n      params: {\n        state: 'open',\n        per_page: 5\n      }\n    })]),\n          _ref2 = _slicedToArray(_ref, 2),\n          repository = _ref2[0],\n          issues = _ref2[1];\n\n    console.log(issues);\n    this.setState({\n      repository: repository.data,\n      issues: issues.data,\n      loading: false\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          repository = _this$state.repository,\n          issues = _this$state.issues,\n          loading = _this$state.loading;\n\n    if (loading) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Carregando\");\n    }\n\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Owner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Voltar aos deposit\\xF3rios\"), React.createElement(\"img\", {\n      src: repository.owner.avatar_url,\n      alt: repository.owner.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, repository.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, repository.description)), React.createElement(IssueList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, issues.map(issue => React.createElement(\"li\", {\n      key: String(issue.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: issue.user.avatar_url,\n      alt: issue.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: issue.html_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, issue.title), issue.labels.map(label => React.createElement(\"span\", {\n      key: String(label.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, label.name))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, issue.user.login))))));\n  }\n\n}\nRepository.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      repository: PropTypes.string\n    })\n  }).isRequired\n};","map":{"version":3,"sources":["/home/julyan/Documents/dev/dev/desafio5/src/pages/Repository/index.js"],"names":["React","Component","Link","PropTypes","api","Container","Loading","Owner","IssueList","Repository","state","repository","issues","loading","filters","label","active","filterIndex","page","componentDidMount","match","props","repoName","decodeURIComponent","params","Promise","all","get","per_page","console","log","setState","data","render","owner","avatar_url","login","name","description","map","issue","String","id","user","html_url","title","labels","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport api from '../../services/api';\n\nimport Container from '../../components/Container';\nimport { Loading, Owner, IssueList } from './styles';\n\nexport default class Repository extends Component {\n  static propTypes = {\n    match: PropTypes.shape({\n      params: PropTypes.shape({\n        repository: PropTypes.string,\n      }),\n    }).isRequired,\n  };\n\n  state = {\n    repository: {},\n    issues: [],\n    loading: true,\n    filters: [\n      { state: 'all', label: 'Todas', active: true },\n      { state: 'open', label: 'Abertas', active: false },\n      { state: 'closed', label: 'Fechadas', active: false },\n    ],\n    filterIndex: 0,\n    page: 1,\n  };\n\n  async componentDidMount() {\n    const { match } = this.props;\n    const { filters } = this.state;\n    \n    const repoName = decodeURIComponent(match.params.repository);\n\n    const [repository, issues] = await Promise.all([\n      api.get(`/repos/${repoName}`),\n      api.get(`/repos/${repoName}/issues`, {\n        params: {\n          state: 'open',\n          per_page: 5,\n        },\n      }),\n    ]);\n    console.log(issues);\n    this.setState({\n      repository: repository.data,\n      issues: issues.data,\n      loading: false,\n    });\n  }\n\n  render() {\n    const { repository, issues, loading } = this.state;\n\n    if (loading) {\n      return <Loading>Carregando</Loading>;\n    }\n\n    return (\n      <Container>\n        <Owner>\n          <Link to=\"/\">Voltar aos deposit√≥rios</Link>\n          <img src={repository.owner.avatar_url} alt={repository.owner.login} />\n          <h1>{repository.name}</h1>\n          <p>{repository.description}</p>\n        </Owner>\n\n        <IssueList>\n          {issues.map(issue => (\n            <li key={String(issue.id)}>\n              <img src={issue.user.avatar_url} alt={issue.name} />\n              <div>\n                <strong>\n                  <a href={issue.html_url}>{issue.title}</a>\n                  {issue.labels.map(label => (\n                    <span key={String(label.id)}>{label.name}</span>\n                  ))}\n                </strong>\n                <p>{issue.user.login}</p>\n              </div>\n            </li>\n          ))}\n        </IssueList>\n      </Container>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}