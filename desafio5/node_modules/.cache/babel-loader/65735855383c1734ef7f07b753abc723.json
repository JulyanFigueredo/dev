{"ast":null,"code":"var _jsxFileName = \"/home/julyan/Documents/dev/dev/modulo05/src/pages/Repository/index.js\";\nimport React, { Component } from 'react';\nimport api from '../../services/api'; // import { Container } from './styles';\n\nexport default class Repository extends Component {\n  async componentDidMount() {\n    const match = this.props.match;\n    const repoName = decodeURIComponent(match.params.repository); // const response = await api.get(`/repos/${repoName}`);\n    // const response = await api.get(`/repos/${repoName}/issues`);\n\n    const _ref = await Promise.all([api.get(`/repos/${repoName}`), api.get(`/repos/${repoName}/issues`)]),\n          reposiory = _ref.reposiory,\n          issues = _ref.issues;\n  }\n\n  render() {\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Repository\");\n  }\n\n}","map":{"version":3,"sources":["/home/julyan/Documents/dev/dev/modulo05/src/pages/Repository/index.js"],"names":["React","Component","api","Repository","componentDidMount","match","props","repoName","decodeURIComponent","params","repository","Promise","all","get","reposiory","issues","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,oBAAhB,C,CAEA;;AAEA,eAAe,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAChD,QAAMG,iBAAN,GAA0B;AAAA,UAChBC,KADgB,GACN,KAAKC,KADC,CAChBD,KADgB;AAGxB,UAAME,QAAQ,GAAGC,kBAAkB,CAACH,KAAK,CAACI,MAAN,CAAaC,UAAd,CAAnC,CAHwB,CAKxB;AACA;;AANwB,iBAQM,MAAMC,OAAO,CAACC,GAAR,CAAY,CAC9CV,GAAG,CAACW,GAAJ,CAAS,UAASN,QAAS,EAA3B,CAD8C,EAE9CL,GAAG,CAACW,GAAJ,CAAS,UAASN,QAAS,SAA3B,CAF8C,CAAZ,CARZ;AAAA,UAQhBO,SARgB,QAQhBA,SARgB;AAAA,UAQLC,MARK,QAQLA,MARK;AAYzB;;AAEDC,EAAAA,MAAM,GAAG;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAjB+C","sourcesContent":["import React, { Component } from 'react';\nimport api from '../../services/api';\n\n// import { Container } from './styles';\n\nexport default class Repository extends Component {\n  async componentDidMount() {\n    const { match } = this.props;\n\n    const repoName = decodeURIComponent(match.params.repository);\n\n    // const response = await api.get(`/repos/${repoName}`);\n    // const response = await api.get(`/repos/${repoName}/issues`);\n\n    const { reposiory, issues } = await Promise.all([\n      api.get(`/repos/${repoName}`),\n      api.get(`/repos/${repoName}/issues`),\n    ]);\n  }\n\n  render() {\n    return <h1>Repository</h1>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}